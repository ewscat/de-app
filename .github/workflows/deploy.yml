name: Deploy woorden ðŸ“¦

on:
  push:
    branches:
    - main

jobs:
  deploy:
    name: Deploy to web hosting ðŸš€
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@master
    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.6

    - name: Terraform Init
      id: init
      working-directory: "terraform/env/prd"
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Validate
      id: validate
      working-directory: "terraform/env/prd"
      run: terraform validate -no-color

    - name: Terraform Apply
      id: apply
      working-directory: "terraform/env/prd"
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Specify Cloudfront distribution id
      id: output
      working-directory: "terraform/env/prd"
      run: echo "distribution_id=$(terraform output cf_distribution_id)" >> $GITHUB_ENV
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Generate data content
      run: |
        ./tools/words.py --meta --no-print
        ./tools/words.py --no-print

    - name: Deploy web site to S3 hosting
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ vars.AWS_REGION }}
        SOURCE_DIR: 'www'

    - name: Refresh CloudFront cache
      uses: chetan/invalidate-cloudfront-action@v2
      env:
        DISTRIBUTION: ${{ env.distribution_id }}
        PATHS: "/"
        AWS_REGION: ${{ vars.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
